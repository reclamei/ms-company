openapi: 3.0.1
info:
    title: ms-company
    version: v1
servers:
    -   url: http://localhost:8081
paths:
    /service-types:
        post:
            tags:
                - service-types
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ServiceTypeCreateRequest"
                required: true
            responses:
                '201':
                    description: The service type was created successfully
                '400':
                    description: Error creating the service type
        put:
            tags:
                - service-types
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ServiceTypeUpdateRequest"
                required: true
            responses:
                '204':
                    description: The service type was update successfully
                '400':
                    description: Error creating the service type
        get:
            tags:
                - service-types
            operationId: findById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '200':
                    description: Service type was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceTypeResponse"
                '404':
                    description: Service type was not found
        delete:
            tags:
                - service-types
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Service type was successfully deleted
                '404':
                    description: Service type was not found
    /companies:
        post:
            tags:
                - companies
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CompanyCreateRequest"
                required: true
            responses:
                '201':
                    description: The company was created successfully
                '400':
                    description: Error creating the company
        put:
            tags:
                - companies
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CompanyUpdateRequest"
                required: true
            responses:
                '204':
                    description: The company was update successfully
                '400':
                    description: Error creating the company
        get:
            tags:
                - companies
            operationId: findById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '200':
                    description: Company was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/CompanyResponse"
                '404':
                    description: Company was not found
        delete:
            tags:
                - companies
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Company was successfully deleted
                '404':
                    description: Company was not found
    /locations/{latitude}/{longitude}:
        get:
            tags:
                - locations
            operationId: findByLocalization
            parameters:
                -   name: latitude
                    in: path
                    required: true
                    schema:
                        type: number
                -   name: longitude
                    in: path
                    required: true
                    schema:
                        type: number
            responses:
                '200':
                    description: Location was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/LocationResponse"
                '404':
                    description: Company was not found
    /locations:
        post:
            tags:
                - locations
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LocationCreateRequest"
                required: true
            responses:
                '201':
                    description: The location was created successfully
                '400':
                    description: Error creating the location
        put:
            tags:
                - locations
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LocationUpdateRequest"
                required: true
            responses:
                '204':
                    description: The location was update successfully
                '400':
                    description: Error creating the location
        get:
            tags:
                - locations
            operationId: findAll
            responses:
                '200':
                    description: Location was found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/LocationResponse"
                '404':
                    description: Company was not found
        delete:
            tags:
                - locations
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Location was successfully deleted
                '404':
                    description: Location was not found
    /coverages:
        post:
            tags:
                - coverages
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CoverageCreateRequest"
                required: true
            responses:
                '201':
                    description: The coverage was created successfully
                '400':
                    description: Error creating the coverage
        put:
            tags:
                - coverages
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CoverageUpdateRequest"
                required: true
            responses:
                '204':
                    description: The coverage was update successfully
                '400':
                    description: Error creating the coverage
components:
    schemas:
        ServiceTypeCreateRequest:
            required:
                - name
                - description
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            name:
                                type: string
                            description:
                                type: string
        ServiceTypeUpdateRequest:
            required:
                - id
                - name
                - description
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                            description:
                                type: string
        ServiceTypeResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                            description:
                                type: string

        CompanyCreateRequest:
            required:
                - name
                - phone
                - sacPhone
                - email
                - cnpj
                - description
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                description:
                    type: string
                    example: Harry Potter Description
                heads:
                    type: array
                    items:
                        type: object
                        properties:
                            name:
                                type: string
                                example: Harry Potter
                            email:
                                type: string
                                format: email
                                example: email@gmail.com
                            phone:
                                maxLength: 11
                                minLength: 10
                                type: string
                                example: 11222223333
        CompanyUpdateRequest:
            required:
                - id
                - name
                - description
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                description:
                    type: string
                    example: Harry Potter Description
                heads:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                                example: Harry Potter
                            email:
                                type: string
                                format: email
                                example: email@gmail.com
                            phone:
                                maxLength: 11
                                minLength: 10
                                type: string
                                example: 11222223333
        CompanyResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                description:
                    type: string
                    example: Harry Potter Description
                heads:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                                example: Harry Potter
                            email:
                                type: string
                                format: email
                                example: email@gmail.com
                            phone:
                                maxLength: 11
                                minLength: 10
                                type: string
                                example: 11222223333

        LocationCreateRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
        LocationUpdateRequest:
            required:
                - id
                - name
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
        LocationResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter

        CoverageCreateRequest:
            type: object
            properties:
                service_type:
                    type: object
                    properties:
                        id:
                            type: long
                company:
                    type: object
                    properties:
                        id:
                            type: long
                locations:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
        CoverageUpdateRequest:
            type: object
            properties:
                service_type:
                    type: object
                    properties:
                        id:
                            type: long
                company:
                    type: object
                    properties:
                        id:
                            type: long
                locations:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long