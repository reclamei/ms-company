openapi: 3.0.1
info:
    title: ms-company
    version: v1
servers:
    -   url: http://localhost:8081
paths:
    /service-types:
        post:
            tags:
                - service-types
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ServiceTypeCreateRequest"
                required: true
            responses:
                '201':
                    description: The service type was created successfully
                '400':
                    description: Error creating the service type
        put:
            tags:
                - service-types
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ServiceTypeUpdateRequest"
                required: true
            responses:
                '204':
                    description: The service type was update successfully
                '400':
                    description: Error creating the service type
        get:
            tags:
                - service-types
            operationId: findAll
            responses:
                '200':
                    description: Service types was found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/ServiceTypeResponse"
                '404':
                    description: Service types was not found
        delete:
            tags:
                - service-types
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Service type was successfully deleted
                '404':
                    description: Service type was not found
    /service-types/{id}:
        get:
            tags:
                - service-types
            operationId: findById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '200':
                    description: Service type was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ServiceTypeResponse"
                '404':
                    description: Service type was not found
    /heads:
        post:
            tags:
                - heads
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/HeadCreateRequest"
                required: true
            responses:
                '201':
                    description: The head was created successfully
                '400':
                    description: Error creating the company
        put:
            tags:
                - heads
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/HeadUpdateRequest"
                required: true
            responses:
                '204':
                    description: The head was update successfully
                '400':
                    description: Error updating the head
        delete:
            tags:
                - companies
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Head was successfully deleted
                '404':
                    description: Head was not found
    /heads/company/{companyId}:
        get:
            tags:
                - heads
            operationId: getAllHeadsByCompanyId
            parameters:
                -   name: companyId
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '200':
                    description: Heads was found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/HeadResponse"
                '404':
                    description: Heads was not found
    /heads/{externalId}/deny:
        patch:
            tags:
                - heads
            operationId: denyHead
            parameters:
                -   name: externalId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
            responses:
                '204':
                    description: The head was update successfully
                '400':
                    description: Error updating the head
    /heads/{externalId}/confirm:
        patch:
            tags:
                - heads
            operationId: confirmHead
            parameters:
                -   name: externalId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
            responses:
                '204':
                    description: The head was update successfully
                '400':
                    description: Error updating the head
    /companies:
        post:
            tags:
                - companies
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CompanyCreateRequest"
                required: true
            responses:
                '201':
                    description: The company was created successfully
                '400':
                    description: Error creating the company
        put:
            tags:
                - companies
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CompanyUpdateRequest"
                required: true
            responses:
                '204':
                    description: The company was update successfully
                '400':
                    description: Error updating the company
        get:
            tags:
                - companies
            operationId: findById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '200':
                    description: Company was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/CompanyResponse"
                '404':
                    description: Company was not found
        delete:
            tags:
                - companies
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Company was successfully deleted
                '404':
                    description: Company was not found
    /companies/cnpj/{cnpj}:
        get:
            tags:
                - locations
            operationId: getCompanyDetailsByCnpj
            parameters:
                -   name: cnpj
                    in: path
                    required: true
                    schema:
                        type: string
                        pattern: ^\d{14}$
            responses:
                '200':
                    description: Company details was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/CompanyResponse"
                '404':
                    description: Company details was not found
                '400':
                    description: Invalid CNPJ
    /companies/head/external-id/{externalId}:
        get:
            tags:
                - companies
            operationId: getCompanyByHeadExternalId
            parameters:
                -   name: externalId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
            responses:
                '200':
                    description: Company was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/CompanyResponse"
                '404':
                    description: Company details was not found
                '400':
                    description: Invalid external-id
    /companies/pending-approval:
        get:
            tags:
                - companies
            operationId: getCompaniesPendingApproval
            responses:
                '200':
                    description: Company was found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/CompanyResponse"
                '404':
                    description: Company details was not found
                '400':
                    description: Invalid external-id
    /locations:
        post:
            tags:
                - locations
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LocationCreateRequest"
                required: true
            responses:
                '201':
                    description: The location was created successfully
                '400':
                    description: Error creating the location
        put:
            tags:
                - locations
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LocationUpdateRequest"
                required: true
            responses:
                '204':
                    description: The location was update successfully
                '400':
                    description: Error creating the location
        get:
            tags:
                - locations
            operationId: findAll
            responses:
                '200':
                    description: Location was found
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/LocationResponse"
                '404':
                    description: Company was not found
        delete:
            tags:
                - locations
            operationId: deleteById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Location was successfully deleted
                '404':
                    description: Location was not found
    /locations/{latitude}/{longitude}:
        get:
            tags:
                - locations
            operationId: findByLocalization
            parameters:
                -   name: latitude
                    in: path
                    required: true
                    schema:
                        type: string
                -   name: longitude
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: Location was found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/LocationResponse"
                '404':
                    description: Company was not found
    /coverages:
        post:
            tags:
                - coverages
            operationId: create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CoverageCreateRequest"
                required: true
            responses:
                '201':
                    description: The coverage was created successfully
                '400':
                    description: Error creating the coverage
        put:
            tags:
                - coverages
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CoverageUpdateRequest"
                required: true
            responses:
                '204':
                    description: The coverage was update successfully
                '400':
                    description: Error creating the coverage
    /coverages/{serviceTypeId}/{companyId}:
        delete:
            tags:
                - coverages
            operationId: delete
            parameters:
                -   name: serviceTypeId
                    in: path
                    required: true
                    schema:
                        type: long
                -   name: companyId
                    in: path
                    required: true
                    schema:
                        type: long
            responses:
                '204':
                    description: Coverage was successfully deleted
                '404':
                    description: Coverage was not found
components:
    schemas:
        ServiceTypeCreateRequest:
            required:
                - name
                - description
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            name:
                                type: string
                            description:
                                type: string
        ServiceTypeUpdateRequest:
            required:
                - id
                - name
                - description
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                            description:
                                type: string
        ServiceTypeResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                description:
                    type: string
                    example: Harry Potter Description
                subtypes:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            name:
                                type: string
                            description:
                                type: string

        CompanyCreateRequest:
            required:
                - name
                - phone
                - email
                - cnpj
                - description
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                description:
                    type: string
                    example: Harry Potter Description
                heads:
                    type: array
                    items:
                        type: object
                        properties:
                            externalId:
                                type: string
                                format: uuid
                            name:
                                type: string
                                example: Harry Potter
                            email:
                                type: string
                                format: email
                                example: email@gmail.com
                            phone:
                                maxLength: 11
                                minLength: 10
                                type: string
                                example: 11222223333
        CompanyUpdateRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: long
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                name:
                    type: string
                    example: Harry Potter
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                site:
                    type: string
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                description:
                    type: string
                    example: Harry Potter Description
        CompanyResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
                site:
                    type: string
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                sacPhone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                cnpj:
                    type: string
                    format: cnpj
                    example: 90796535000103
                description:
                    type: string
                    example: Harry Potter Description
                heads:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
                            companyId:
                                type: long
                            externalId:
                                type: string
                                format: uuid
                            isAdmin:
                                type: boolean
                            name:
                                type: string
                                example: Harry Potter
                            email:
                                type: string
                                format: email
                                example: email@gmail.com
                            phone:
                                maxLength: 11
                                minLength: 10
                                type: string
                                example: 11222223333
                            createdAt:
                                type: string
                                format: date

        HeadCreateRequest:
            required:
                - externalId
                - companyId
                - name
                - email
                - phone
            type: object
            properties:
                companyId:
                    type: long
                externalId:
                    type: string
                    format: uuid
                isAdmin:
                    type: boolean
                name:
                    type: string
                    example: Harry Potter
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
        HeadUpdateRequest:
            required:
                - id
                - externalId
                - companyId
                - name
                - email
                - phone
            type: object
            properties:
                id:
                    type: long
                companyId:
                    type: long
                externalId:
                    type: string
                    format: uuid
                isAdmin:
                    type: boolean
                name:
                    type: string
                    example: Harry Potter
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333
        HeadResponse:
            type: object
            properties:
                id:
                    type: long
                companyId:
                    type: long
                externalId:
                    type: string
                    format: uuid
                isAdmin:
                    type: boolean
                name:
                    type: string
                    example: Harry Potter
                email:
                    type: string
                    format: email
                    example: email@gmail.com
                phone:
                    maxLength: 11
                    minLength: 10
                    type: string
                    example: 11222223333

        LocationCreateRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    example: Harry Potter
        LocationUpdateRequest:
            required:
                - id
                - name
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter
        LocationResponse:
            type: object
            properties:
                id:
                    type: long
                name:
                    type: string
                    example: Harry Potter

        CoverageCreateRequest:
            type: object
            properties:
                service_type:
                    type: object
                    properties:
                        id:
                            type: long
                company:
                    type: object
                    properties:
                        id:
                            type: long
                locations:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
        CoverageUpdateRequest:
            type: object
            properties:
                service_type:
                    type: object
                    properties:
                        id:
                            type: long
                company:
                    type: object
                    properties:
                        id:
                            type: long
                locations:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: long
